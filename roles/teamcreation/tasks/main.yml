---
# tasks file for teamcreation
- name: Retrieving the MutualIT Ansible Controller token
  awx.awx.token:
    description: "MutualIT AAP Token"
    scope: "write"
    state: present
    controller_host: "{{ aap_controller}}"
    controller_username: "{{ aap_username }}"
    controller_password: "{{ aap_password}}"
  #no_log: true


- name: Creation of the organization {{ aap_company }}_{{ aap_organizationnew }}
  awx.awx.organization:
    name: "{{ aap_company }}_{{ aap_organizationnew }}"
    description: "Mutualit departement"
    #controller_oauthtoken: "{{ controller_token.token }}"
    controller_host: "{{ aap_controller}}"
    controller_username: "{{ aap_username }}"
    controller_password: "{{ aap_password}}"
    state: present
    max_hosts: 0
    galaxy_credentials:
            - Ansible Galaxy
  register: organization

- name: Creation of the MutualIT departement
  block:
    - name: Creation of both teams inside the organization
      awx.awx.team:
        name: "{{ organization.name }}_{{ item }}"
        description: "Mutualit team {{ item }}"
        #controller_oauthtoken: "{{ controller_token.token }}"
        controller_host: "{{ aap_controller}}"
        controller_username: "{{ aap_username }}"
        controller_password: "{{ aap_password}}"
        organization: "{{ organization.name }}"
        state: present
      loop: "{{ aap_roles | map(attribute='team') | unique }}"

    - name: Adding the roles to the teams
      awx.awx.role:
        team: "{{ organization.name }}_{{ item.team }}"
        organization: "{{ item.org }}"
        role: "{{ item.role }}"
        state: present
        #controller_oauthtoken: "{{ controller_token.token }}"
        controller_host: "{{ aap_controller}}"
        controller_username: "{{ aap_username }}"
        controller_password: "{{ aap_password}}"
      loop: "{{ aap_roles | selectattr('team', 'eq', 'poweruser') | selectattr('kind', 'eq', 'org') | list }}"

    - name: add project to org
      awx.awx.project:
        name: "{{ aap_projectname }}"
        scm_url: https://github.com/graenngaur/Proj_TowerRoles.git
        credential: "{{ aap_gitpassword}}"
        organization: "{{ organization.name }}"
        scm_update_on_launch: false
        scm_type: git
        #controller_oauthtoken: "{{ controller_token.token }}"
        controller_host: "{{ aap_controller}}"
        controller_username: "{{ aap_username }}"
        controller_password: "{{ aap_password}}"
      when: aap_prject_add is true

    - name: toekennen read role to project
      awx.awx.role:
        teams: "{{ organization.name }}_poweruser"
        project: "{{ aap_projectname }}"
        role: use
        #controller_oauthtoken: "{{ controller_token.token }}"
        controller_host: "{{ aap_controller}}"
        controller_username: "{{ aap_username }}"
        controller_password: "{{ aap_password}}"

    - name: toekennen use roles inventories
      awx.awx.role:
        teams: "{{ organization.name }}_poweruser"
        inventories: "{{ survey_inventories }}"
        role: use
        #controller_oauthtoken: "{{ controller_token.token }}"
        controller_host: "{{ aap_controller}}"
        controller_username: "{{ aap_username }}"
        controller_password: "{{ aap_password}}"
        
    - name: Filter cred_listfull based on names_to_filter
      set_fact:
        filtered_cred_listfull: "{{ aap_main_credentials | selectattr('name', 'in', survey_credentials) | list }}"

    - name: copy credentials
      awx.awx.credential:
        name: "{{ item.name }}"
        new_name: "{{ organization.name }}_{{ item.name }}"
        credential_type: "{{ item.kind }}"
        organization: "{{ organization.name }}"
        #controller_oauthtoken: "{{ controller_token.token }}"
        controller_host: "{{ aap_controller}}"
        controller_username: "{{ aap_username }}"
        controller_password: "{{ aap_password}}"
      loop: "{{ filtered_cred_listfull }}"

  when: organization.name is defined